{"name":"PHP 7 DDD Cargo Sample","tagline":"PHP 7 Version of the cargo sample used in Eric Evans DDD book","body":"[![Scrutinizer Quality Score](https://scrutinizer-ci.com/g/codeliner/php-ddd-cargo-sample/badges/quality-score.png?s=d68042d97e40904ec369e137b60a1076509298f8)](https://scrutinizer-ci.com/g/codeliner/php-ddd-cargo-sample/)\r\n[![Build Status](https://travis-ci.org/codeliner/php-ddd-cargo-sample.png?branch=master)](https://travis-ci.org/codeliner/php-ddd-cargo-sample)\r\n\r\n## Cargo Sample Reloaded\r\n\r\nAfter two years of inactivity a new version of the PHP DDD Cargo Sample is available [2015/12/07].\r\nThe new version is a complete rewrite of the cargo sample using cutting edge technology.\r\n\r\n### Sponsoring\r\nThis brand new cargo sample version is sponsored by prooph software GmbH. You can follow us on [twitter](https://twitter.com/prooph_software)\r\n\r\n### tl;dr\r\nClick [here](https://github.com/codeliner/php-ddd-cargo-sample/pull/22#issuecomment-162734730) :smile:\r\n\r\n### What Is New?\r\n\r\n- [x] PHP 7 with strict scalar type hints\r\n- [x] PSR-7 middleware layer using [zend-expressive](https://github.com/zendframework/zend-expressive)\r\n- [x] Doctrine ORM ^2.5 [Embeddables](http://doctrine-orm.readthedocs.org/projects/doctrine-orm/en/latest/tutorials/embeddables.html)\r\n- [x] PHPUnit ^5.0\r\n- [x] Behat ^3.0\r\n- [x] Single Page UI using [riot.js](http://riotjs.com/)\r\n\r\n## Goal of the Project\r\n\r\nWe want to show the PHP 7 way of implementing Domain-Driven Design with the help of\r\nthe original Cargo sample used in Eric Evans book\r\n`Domain-Driven Design: Tackling Complexity in the Heart of Software`.\r\nThis has also been done using Java, C#, Ruby and other programming languages.\r\n\r\nIt is not the one way to apply DDD and only covers the tactical part of DDD. \r\nHowever, the cargo sample should help you understand the theory\r\nand gives you a starting point. Also see the [Caveats](http://dddsample.sourceforge.net/) of the \r\njava implementation. The same applies for our version. \r\n\r\n## Installation\r\nSee the [Installation](https://github.com/codeliner/php-ddd-cargo-sample/blob/master/docs/installation.md) file.\r\n\r\n## Structure\r\nThe [annotated project overview](https://github.com/codeliner/php-ddd-cargo-sample/blob/master/docs/structure.md)\r\ngives you an idea of the system structure.\r\n\r\n## Support\r\nIf you have any problems with the application please open a [GitHub issue](https://github.com/codeliner/php-ddd-cargo-sample/issues?state=open).\r\nSame applies if you have a question or a feature wish.\r\n\r\n## Contributing\r\nContributions of any kind are welcome. The PHP 7 DDD cargo sample aims to help people understand the tactical design part of DDD.\r\nSo we'd be very happy if you tell your friends about it, link it in discussions and mention it on twitter.\r\nIf you've found a bug or have an idea for an improvement, just submit a PR like usual.\r\n\r\n## Become A Member\r\nIf you want to share your experience with other DDD enthusiasts or want to ask a question about DDD then the [DDDinPHP google group](https://groups.google.com/forum/#!forum/dddinphp) is good place to do so.\r\n\r\nYou can find more DDD stuff like interesting articles and related libraries on the [PhpFriendsOfDdd/state-of-the-union](https://github.com/PhpFriendsOfDdd/state-of-the-union) project.\r\n\r\n## Behavior Driven Design\r\nAll features of the application are described in feature files. You can find them in\r\nthe [features folder](https://github.com/codeliner/php-ddd-cargo-sample/tree/master/features) of the project.\r\nWe make use of [Behat](http://behat.org/) and [Mink](http://mink.behat.org/) to test our\r\nbusiness expectations.\r\n\r\nYou can run the feature tests by navigating to the project root and start the selenium server shipped with the sample app:\r\n`java -jar bin/selenium-server-standalone-2.46.0.jar`\r\nAfter the server started successfully open another console, navigate to project root again and run Behat with the command `php bin/behat`.\r\n\r\n*Note: If it does not work, check that the behat file is executable.\r\n\r\n## Unit Tests\r\nUnit Tests are of course also available. You can find them in [CargoBackend/tests](https://github.com/codeliner/php-ddd-cargo-sample/tree/master/CargoBackend/tests).\r\nGot to the directory and simply run `phpunit`.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}